{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled3.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyP3nQDa+pxMVQ+3GmvaNMT6",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ghlim40/BT/blob/main/%ED%8C%8C%EC%9D%B4%EC%8D%AC%EC%9C%BC%EB%A1%9C%20%ED%95%98%EB%8A%94%20%EB%B0%B1%ED%85%8C%EC%8A%A4%ED%8C%85%20-%20%EA%B3%A8%EB%93%A0%ED%81%AC%EB%A1%9C%EC%8A%A4%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "gqDRxEn13zxZ"
      },
      "outputs": [],
      "source": [
        "#출처 https://www.youtube.com/watch?v=XNjY7p_0Xm4\n",
        "from pykrx import stock\n",
        "import numpy as np \n",
        "import pandas as pd\n",
        "from pandas import Series"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def 장기_단기_이평선_수익률(df, Ns, Nl):\n",
        "    df = df[  [ '종가' ] ].copy()\n",
        "    df['ma_s'] = df['종가'].rolling( Ns ).mean( ).shift ( 1 )\n",
        "    df['ma_l'] = df['종가'].rolling( Nl ).mean( ).shift ( 1 )\n",
        "    cond = df['ma_s'] > df['ma_l']\n",
        "    df['status'] = np.where(cond, 1, 0)\n",
        "    df.iloc[-1, -1] = 0\n",
        "    \n",
        "    # 매수/매도 조건 \n",
        "    매수조건 = (df['status'] == 1) & (df['status'].shift(1) != 1)\n",
        "    매도조건 = (df['status'] == 0) & (df['status'].shift(1) == 1)\n",
        "    \n",
        "    # 수익률 계산\n",
        "    수익률 = df.loc[매도조건, '종가'].reset_index(drop=True) / df.loc[매수조건, '종가'].reset_index(drop=True)\n",
        "    수익률 = 수익률 - 0.002\n",
        "    return 수익률.cumprod().iloc[-1]"
      ],
      "metadata": {
        "id": "lrWY4J1b325Z"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df = stock.get_index_ohlcv_by_date(\"20200101\", \"20200831\", \"1001\")\n",
        "df = df[  [ '종가' ] ]"
      ],
      "metadata": {
        "id": "ULplBJbF36C9"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "result = [ ]\n",
        "for i in range(2, 17):\n",
        "    for j in range(30, 61):\n",
        "        result.append(장기_단기_이평선_수익률(df, i, j))"
      ],
      "metadata": {
        "id": "AXFcoHE_38bQ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "index = pd.MultiIndex.from_product([ range(2, 17), range(30, 61)  ])\n",
        "s = Series(result, index)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 196
        },
        "id": "eYH8YUFa3-OS",
        "outputId": "780263a7-261f-48f0-8ea9-460459c7cd42"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-1-fa21159427d0>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mindex\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mMultiIndex\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfrom_product\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m17\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m30\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m61\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0ms\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mSeries\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'pd' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(s.idxmax())\n",
        "print(s.max())"
      ],
      "metadata": {
        "id": "OCykzElU4AZ7"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}